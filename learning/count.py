import pandas as pd
from collections import defaultdict

# CSV 파일 읽기
csv_file_name = 'totalDataCSV.csv'
df = pd.read_csv(csv_file_name)

# 각 행에서 1의 값이 2개 이상인 행의 개수 세기
count = (df.iloc[:, 1:] == 1).sum(axis=1) == 1
num_rows_with_multiple_ones = count.sum()

print(f"1의 값이 1개 이상인 행의 개수는 {num_rows_with_multiple_ones}개입니다.")

# 각 행에서 1의 값이 2개 이상인 행의 개수 세기
count = (df.iloc[:, 1:] == 1).sum(axis=1) == 2
num_rows_with_multiple_ones = count.sum()

print(f"1의 값이 2개 이상인 행의 개수는 {num_rows_with_multiple_ones}개입니다.")


# 각 행에서 1의 값이 2개 이상인 행의 개수 세기
count = (df.iloc[:, 1:] == 1).sum(axis=1) == 3
num_rows_with_multiple_ones = count.sum()

print(f"1의 값이 3개 이상인 행의 개수는 {num_rows_with_multiple_ones}개입니다.")


print('#################################################')

# 확인할 열 목록
columns_to_check = ['block number dependency', 'dangerous delegatecall', 'ether frozen', 
                    'ether strict equality', 'integer overflow', 'reentrancy', 
                    'timestamp dependency', 'unchecked external call']

# 각 열에서 1의 개수를 세기
counts = df[columns_to_check].apply(lambda x: (x == 1.0).sum())

# 결과 출력
for column, count in counts.items():
    print(f"{column}: {count}")


print('#################################################')


# 조합별 개수를 저장할 딕셔너리
overlapping_issues_count = defaultdict(int)

# 각 행에서 1의 개수를 세고 2개 이상의 1이 존재하는 경우 조합을 저장
for index, row in df.iterrows():
    ones_in_row = row[columns_to_check] == 1.0
    overlapping_issues = tuple(ones_in_row[ones_in_row].index.tolist())
    if len(overlapping_issues) >= 2:
        overlapping_issues_count[overlapping_issues] += 1

# 결과 출력
for issues, count in overlapping_issues_count.items():
    print(f"{list(issues)} : {count}")